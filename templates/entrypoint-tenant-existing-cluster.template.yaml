AWSTemplateFormatVersion: "2010-09-09"

Description: Deploys a Tenant of Cisco Secure Firewall Cloud Native into an existing EKS cluster

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required Configuration
        Parameters:
          - ClusterID
          - DataplaneNamespace
      - Label:
          default: Basic Configuration - Global
        Parameters:
          - StorageType
      - Label:
          default: Basic Configuration - Data Plane
        Parameters:
          - EnforcerCacheType
      - Label:
          default: Basic Configuration - Firewall
        Parameters:
          - EnforcerServiceRoles
          - EnforcerAutoscaling
          - SmartLicenseToken
          - MaxLicenseCount
      - Label:
          default: Advanced Configuration - Data Plane
        Parameters:
          - EnforcerConfigurationTier
          - EnforcerCacheNodeType
          - EnforcerCacheTransitEncryption
          - EnforcerCacheAuthToken
      - Label:
          default: (Read-only, do not change) AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      ClusterID:
        default: EKS cluster ID
      DataplaneNamespace:
        default: Namespace
      SmartLicenseToken:
        default: Smart License token
      MaxLicenseCount:
        default: Maximum licenses count
      StorageType:
        default: Storage type
      EnforcerConfigurationTier:
        default: Enforcer instance tier
      EnforcerServiceRoles:
        default: Enforcer service roles
      EnforcerCacheAuthToken:
        default: Redis authentication token
      EnforcerCacheType:
        default: Cache type
      EnforcerCacheNodeType:
        default: Cache node type
      EnforcerCacheTransitEncryption:
        default: In-Transit encryption
      EnforcerAutoscaling:
        default: Enforcer autoscaling


Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), periods (.) and forward slashes (/).
    Default: quickstart-cisco-secure-firewall-cloud-native/
    Description: The S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), periods (.) and
      forward slashes (/).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. If you use your own bucket, you must specify this value.
    Type: String

  ClusterID:
    AllowedPattern: ".+"
    Type: String
    Description: EKS cluster name (a root stack name) with SFCN product deployed.

  DataplaneNamespace:
    Type: String
    AllowedPattern: ".+"
    Description: A Kubernetes namespace name for a tenant. Must be unique across tenants.

  SmartLicenseToken:
    Type: String
    NoEcho: true
    Default: ""
    Description: A token from Smart Account that has Secure Firewall (SFW) licenses

  MaxLicenseCount:
    Type: Number
    Default: 5
    MinValue: 1
    MaxValue: 999
    Description: A maximum number of licenses allowed to be used when enforcer autoscaling is enabled

  StorageType:
    Type: String
    AllowedValues: [ local, efs ]
    Default: local
    Description: The type of a storage used to keep logs and deployments files. EFS can be used only if a parent stack has EFS option selected.

  EnforcerConfigurationTier:
    Description: Instance tier to be used by enforcer workers
    Default: "vCPU4"
    Type: String
    AllowedValues: [ "vCPU4" ]
    ConstraintDescription: must specify vCPU4

  EnforcerServiceRoles:
    Type: String
    Default: default
    AllowedPattern: "[a-zA-Z0-9-]{3,15}(,[a-zA-Z0-9-]{3,15})*"
    AllowedValues: [ "default", "default,vpnredirector" ]
    ConstraintDescription: |
      Role should be alphanumeric and can contain the special character, hyphen (-). Role must be at least 3 characters
      and upto 15 characters long.
    Description: |
      The service role of the data plane node. Leave the setting as “default” if you deployed the SFCN with the default setting of 1 data plane node. Each additional service role requires a corresponding data plane node.

  EnforcerCacheAuthToken:
    Type: String
    NoEcho: true
    MaxLength: 128
    AllowedPattern: "([a-zA-Z0-9!&#$^><-]{16,128})?"
    Default: ""
    ConstraintDescription: Must be blank or contain at least 16 and up to 128 alphanumeric or allowed special characters
    Description: |
      Blank or 16-128 alphanumeric characters. Only permitted special characters are !, &, #, $, ^, <, >, and -.
      Takes effect only when in-transit encryption is enabled

  EnforcerCacheType:
    Type: String
    Default: "none"
    AllowedValues:
      - none
      - elasticache
    Description: Type of External Cache to use for CNFW

  EnforcerCacheNodeType:
    Type: String
    Default: "cache.m5.large"
    AllowedValues: [ cache.m5.xlarge, cache.m5.large ]
    Description: EC2 instance type to use as Cache node, check region availaibility before selection

  EnforcerCacheTransitEncryption:
    Type: String
    AllowedValues: [ Enabled, Disabled ]
    Default: Enabled
    Description: Cannot be changed after creation, update requires replacement

  EnforcerAutoscaling:
    Type: String
    AllowedValues: [ Enabled, Disabled ]
    Default: Disabled
    Description: Enable the default Enforcer autoscaling.

Conditions:
  UsingDefaultBucket: !Equals [ !Ref QSS3BucketName, 'aws-quickstart' ]
  EnforcerCacheTypeIsElastiCache: !Equals [ !Ref EnforcerCacheType, elasticache ]

Resources:
  EnforcerElasticache:
    Type: AWS::CloudFormation::Stack
    Condition: EnforcerCacheTypeIsElastiCache
    Properties:
      TemplateURL:
        !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sfcn-elasticache.template.yaml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        Name: !Ref AWS::StackName
        VPCID: { Fn::ImportValue: !Sub "${ClusterID}-VPCID" }
        PublicSubnet1ID: { Fn::ImportValue: !Sub "${ClusterID}-PublicSubnet1ID" }
        PublicSubnet2ID: { Fn::ImportValue: !Sub "${ClusterID}-PublicSubnet2ID" }
        WorkersSecurityGroup0ID: { Fn::ImportValue: !Sub "${ClusterID}-WorkersSecurityGroup0ID" }
        WorkersSecurityGroup1ID: { Fn::ImportValue: !Sub "${ClusterID}-WorkersSecurityGroup1ID" }
        WorkersSecurityGroup2ID: { Fn::ImportValue: !Sub "${ClusterID}-WorkersSecurityGroup2ID" }
        WorkersSecurityGroup3ID: { Fn::ImportValue: !Sub "${ClusterID}-WorkersSecurityGroup3ID" }
        EnforcerCacheNodeType: !Ref EnforcerCacheNodeType
        EnforcerCacheAuthToken: !Ref EnforcerCacheAuthToken
        EnforcerCacheTransitEncryption: !Ref EnforcerCacheTransitEncryption

  SecureFirewall:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sfcn-helm.template.yaml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
      Parameters:
        ClusterID: !Ref ClusterID
        Version: { Fn::ImportValue: !Sub '${ClusterID}-FirewallVersion' }
        Controlplane: Disabled
        Name: !Sub "sfcn-${DataplaneNamespace}"
        SystemNamespace: { Fn::ImportValue: !Sub '${ClusterID}-SystemNamespace' }
        DataplaneNamespace: !Ref DataplaneNamespace
        SmartLicenseToken: !Ref SmartLicenseToken
        MaxLicenseCount: !Ref MaxLicenseCount
        StorageType: !Ref StorageType
        EnforcerServiceRoles: !Ref EnforcerServiceRoles
        EnforcerCacheHost: !If [ EnforcerCacheTypeIsElastiCache, !GetAtt EnforcerElasticache.Outputs.PrimaryEndpoint, "" ]
        EnforcerCacheAuthToken: !Ref EnforcerCacheAuthToken
        EnforcerAutoscaling: !Ref EnforcerAutoscaling
        EnforcerConfigurationTier: !Ref EnforcerConfigurationTier
